name: React CI/CD

on:
  push:
    branches: [main]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: List build directory contents
        run: ls -al build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: build

      - name: Check directory
        run: ls -R

  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: build

      - name: Print working directory
        run: pwd

      - name: List current directory contents
        run: ls -al

      - name: List downloaded artifact
        run: ls -alR build

      - name: Debug appleboy/ssh-action environment
        uses: appleboy/ssh-action@master
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          script: |
            echo "### Debugging Environment ###"
            echo "Current working directory: $(pwd)"
            echo "Home directory: $HOME"
            echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
            echo "Listing current directory contents:"
            ls -al
            echo "Printing all environment variables:"
            env

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          script: |
            # EC2 서버에서 정적 파일을 호스팅하는 디렉토리를 생성(또는 이미 있다면 생략 가능)
            mkdir -p /var/www/html

            # build 폴더에 있는 정적 파일 전부를 EC2의 디렉토리로 복사
            scp -o StrictHostKeyChecking=no -r build/ ${SSH_USERNAME}@${SSH_HOST}:/var/www/html

            # Nginx 재시작
            ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} "sudo systemctl restart nginx"
